# Makefile.in generated by automake 1.11.1 from Makefile.am.
# test/default/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



pkgdatadir = $(datadir)/libsodium
pkgincludedir = $(includedir)/libsodium
pkglibdir = $(libdir)/libsodium
pkglibexecdir = $(libexecdir)/libsodium
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
am__append_1 = \
	sodium_utils2 \
	sodium_utils3

check_PROGRAMS = $(am__EXEEXT_2)
TESTS = $(am__EXEEXT_2)
subdir = test/default
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_define.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ld-output-def.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 =  \
	sodium_utils2$(EXEEXT) \
	sodium_utils3$(EXEEXT)
am__EXEEXT_2 = aead_aes256gcm$(EXEEXT) aead_chacha20poly1305$(EXEEXT) \
	auth$(EXEEXT) auth2$(EXEEXT) auth3$(EXEEXT) auth5$(EXEEXT) \
	auth6$(EXEEXT) auth7$(EXEEXT) box$(EXEEXT) box2$(EXEEXT) \
	box7$(EXEEXT) box8$(EXEEXT) box_easy$(EXEEXT) \
	box_easy2$(EXEEXT) box_seal$(EXEEXT) box_seed$(EXEEXT) \
	chacha20$(EXEEXT) core1$(EXEEXT) core2$(EXEEXT) core3$(EXEEXT) \
	core4$(EXEEXT) core5$(EXEEXT) core6$(EXEEXT) \
	ed25519_convert$(EXEEXT) generichash$(EXEEXT) \
	generichash2$(EXEEXT) generichash3$(EXEEXT) hash$(EXEEXT) \
	hash3$(EXEEXT) onetimeauth$(EXEEXT) onetimeauth2$(EXEEXT) \
	onetimeauth7$(EXEEXT) pwhash$(EXEEXT) \
	pwhash_scrypt_ll$(EXEEXT) randombytes$(EXEEXT) \
	scalarmult$(EXEEXT) scalarmult2$(EXEEXT) scalarmult5$(EXEEXT) \
	scalarmult6$(EXEEXT) scalarmult7$(EXEEXT) secretbox$(EXEEXT) \
	secretbox2$(EXEEXT) secretbox7$(EXEEXT) secretbox8$(EXEEXT) \
	secretbox_easy$(EXEEXT) secretbox_easy2$(EXEEXT) \
	shorthash$(EXEEXT) sign$(EXEEXT) sodium_core$(EXEEXT) \
	sodium_utils$(EXEEXT) sodium_version$(EXEEXT) stream$(EXEEXT) \
	stream2$(EXEEXT) stream3$(EXEEXT) stream4$(EXEEXT) \
	verify1$(EXEEXT) $(am__EXEEXT_1)
aead_aes256gcm_SOURCES = aead_aes256gcm.c
aead_aes256gcm_OBJECTS = aead_aes256gcm.$(OBJEXT)
aead_aes256gcm_DEPENDENCIES = $(TESTS_LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
aead_chacha20poly1305_SOURCES = aead_chacha20poly1305.c
aead_chacha20poly1305_OBJECTS = aead_chacha20poly1305.$(OBJEXT)
aead_chacha20poly1305_DEPENDENCIES = $(TESTS_LDADD)
auth_SOURCES = auth.c
auth_OBJECTS = auth.$(OBJEXT)
auth_DEPENDENCIES = $(TESTS_LDADD)
auth2_SOURCES = auth2.c
auth2_OBJECTS = auth2.$(OBJEXT)
auth2_DEPENDENCIES = $(TESTS_LDADD)
auth3_SOURCES = auth3.c
auth3_OBJECTS = auth3.$(OBJEXT)
auth3_DEPENDENCIES = $(TESTS_LDADD)
auth5_SOURCES = auth5.c
auth5_OBJECTS = auth5.$(OBJEXT)
auth5_DEPENDENCIES = $(TESTS_LDADD)
auth6_SOURCES = auth6.c
auth6_OBJECTS = auth6.$(OBJEXT)
auth6_DEPENDENCIES = $(TESTS_LDADD)
auth7_SOURCES = auth7.c
auth7_OBJECTS = auth7.$(OBJEXT)
auth7_DEPENDENCIES = $(TESTS_LDADD)
box_SOURCES = box.c
box_OBJECTS = box.$(OBJEXT)
box_DEPENDENCIES = $(TESTS_LDADD)
box2_SOURCES = box2.c
box2_OBJECTS = box2.$(OBJEXT)
box2_DEPENDENCIES = $(TESTS_LDADD)
box7_SOURCES = box7.c
box7_OBJECTS = box7.$(OBJEXT)
box7_DEPENDENCIES = $(TESTS_LDADD)
box8_SOURCES = box8.c
box8_OBJECTS = box8.$(OBJEXT)
box8_DEPENDENCIES = $(TESTS_LDADD)
box_easy_SOURCES = box_easy.c
box_easy_OBJECTS = box_easy.$(OBJEXT)
box_easy_DEPENDENCIES = $(TESTS_LDADD)
box_easy2_SOURCES = box_easy2.c
box_easy2_OBJECTS = box_easy2.$(OBJEXT)
box_easy2_DEPENDENCIES = $(TESTS_LDADD)
box_seal_SOURCES = box_seal.c
box_seal_OBJECTS = box_seal.$(OBJEXT)
box_seal_DEPENDENCIES = $(TESTS_LDADD)
box_seed_SOURCES = box_seed.c
box_seed_OBJECTS = box_seed.$(OBJEXT)
box_seed_DEPENDENCIES = $(TESTS_LDADD)
chacha20_SOURCES = chacha20.c
chacha20_OBJECTS = chacha20.$(OBJEXT)
chacha20_DEPENDENCIES = $(TESTS_LDADD)
core1_SOURCES = core1.c
core1_OBJECTS = core1.$(OBJEXT)
core1_DEPENDENCIES = $(TESTS_LDADD)
core2_SOURCES = core2.c
core2_OBJECTS = core2.$(OBJEXT)
core2_DEPENDENCIES = $(TESTS_LDADD)
core3_SOURCES = core3.c
core3_OBJECTS = core3.$(OBJEXT)
core3_DEPENDENCIES = $(TESTS_LDADD)
core4_SOURCES = core4.c
core4_OBJECTS = core4.$(OBJEXT)
core4_DEPENDENCIES = $(TESTS_LDADD)
core5_SOURCES = core5.c
core5_OBJECTS = core5.$(OBJEXT)
core5_DEPENDENCIES = $(TESTS_LDADD)
core6_SOURCES = core6.c
core6_OBJECTS = core6.$(OBJEXT)
core6_DEPENDENCIES = $(TESTS_LDADD)
ed25519_convert_SOURCES = ed25519_convert.c
ed25519_convert_OBJECTS = ed25519_convert.$(OBJEXT)
ed25519_convert_DEPENDENCIES = $(TESTS_LDADD)
generichash_SOURCES = generichash.c
generichash_OBJECTS = generichash.$(OBJEXT)
generichash_DEPENDENCIES = $(TESTS_LDADD)
generichash2_SOURCES = generichash2.c
generichash2_OBJECTS = generichash2.$(OBJEXT)
generichash2_DEPENDENCIES = $(TESTS_LDADD)
generichash3_SOURCES = generichash3.c
generichash3_OBJECTS = generichash3.$(OBJEXT)
generichash3_DEPENDENCIES = $(TESTS_LDADD)
hash_SOURCES = hash.c
hash_OBJECTS = hash.$(OBJEXT)
hash_DEPENDENCIES = $(TESTS_LDADD)
hash3_SOURCES = hash3.c
hash3_OBJECTS = hash3.$(OBJEXT)
hash3_DEPENDENCIES = $(TESTS_LDADD)
onetimeauth_SOURCES = onetimeauth.c
onetimeauth_OBJECTS = onetimeauth.$(OBJEXT)
onetimeauth_DEPENDENCIES = $(TESTS_LDADD)
onetimeauth2_SOURCES = onetimeauth2.c
onetimeauth2_OBJECTS = onetimeauth2.$(OBJEXT)
onetimeauth2_DEPENDENCIES = $(TESTS_LDADD)
onetimeauth7_SOURCES = onetimeauth7.c
onetimeauth7_OBJECTS = onetimeauth7.$(OBJEXT)
onetimeauth7_DEPENDENCIES = $(TESTS_LDADD)
pwhash_SOURCES = pwhash.c
pwhash_OBJECTS = pwhash.$(OBJEXT)
pwhash_DEPENDENCIES = $(TESTS_LDADD)
pwhash_scrypt_ll_SOURCES = pwhash_scrypt_ll.c
pwhash_scrypt_ll_OBJECTS = pwhash_scrypt_ll.$(OBJEXT)
pwhash_scrypt_ll_DEPENDENCIES = $(TESTS_LDADD)
randombytes_SOURCES = randombytes.c
randombytes_OBJECTS = randombytes.$(OBJEXT)
randombytes_DEPENDENCIES = $(TESTS_LDADD)
scalarmult_SOURCES = scalarmult.c
scalarmult_OBJECTS = scalarmult.$(OBJEXT)
scalarmult_DEPENDENCIES = $(TESTS_LDADD)
scalarmult2_SOURCES = scalarmult2.c
scalarmult2_OBJECTS = scalarmult2.$(OBJEXT)
scalarmult2_DEPENDENCIES = $(TESTS_LDADD)
scalarmult5_SOURCES = scalarmult5.c
scalarmult5_OBJECTS = scalarmult5.$(OBJEXT)
scalarmult5_DEPENDENCIES = $(TESTS_LDADD)
scalarmult6_SOURCES = scalarmult6.c
scalarmult6_OBJECTS = scalarmult6.$(OBJEXT)
scalarmult6_DEPENDENCIES = $(TESTS_LDADD)
scalarmult7_SOURCES = scalarmult7.c
scalarmult7_OBJECTS = scalarmult7.$(OBJEXT)
scalarmult7_DEPENDENCIES = $(TESTS_LDADD)
secretbox_SOURCES = secretbox.c
secretbox_OBJECTS = secretbox.$(OBJEXT)
secretbox_DEPENDENCIES = $(TESTS_LDADD)
secretbox2_SOURCES = secretbox2.c
secretbox2_OBJECTS = secretbox2.$(OBJEXT)
secretbox2_DEPENDENCIES = $(TESTS_LDADD)
secretbox7_SOURCES = secretbox7.c
secretbox7_OBJECTS = secretbox7.$(OBJEXT)
secretbox7_DEPENDENCIES = $(TESTS_LDADD)
secretbox8_SOURCES = secretbox8.c
secretbox8_OBJECTS = secretbox8.$(OBJEXT)
secretbox8_DEPENDENCIES = $(TESTS_LDADD)
secretbox_easy_SOURCES = secretbox_easy.c
secretbox_easy_OBJECTS = secretbox_easy.$(OBJEXT)
secretbox_easy_DEPENDENCIES = $(TESTS_LDADD)
secretbox_easy2_SOURCES = secretbox_easy2.c
secretbox_easy2_OBJECTS = secretbox_easy2.$(OBJEXT)
secretbox_easy2_DEPENDENCIES = $(TESTS_LDADD)
shorthash_SOURCES = shorthash.c
shorthash_OBJECTS = shorthash.$(OBJEXT)
shorthash_DEPENDENCIES = $(TESTS_LDADD)
sign_SOURCES = sign.c
sign_OBJECTS = sign.$(OBJEXT)
sign_DEPENDENCIES = $(TESTS_LDADD)
sodium_core_SOURCES = sodium_core.c
sodium_core_OBJECTS = sodium_core.$(OBJEXT)
sodium_core_DEPENDENCIES = $(TESTS_LDADD)
sodium_utils_SOURCES = sodium_utils.c
sodium_utils_OBJECTS = sodium_utils.$(OBJEXT)
sodium_utils_DEPENDENCIES = $(TESTS_LDADD)
sodium_utils2_SOURCES = sodium_utils2.c
sodium_utils2_OBJECTS = sodium_utils2.$(OBJEXT)
sodium_utils2_DEPENDENCIES = $(TESTS_LDADD)
sodium_utils3_SOURCES = sodium_utils3.c
sodium_utils3_OBJECTS = sodium_utils3.$(OBJEXT)
sodium_utils3_DEPENDENCIES = $(TESTS_LDADD)
sodium_version_SOURCES = sodium_version.c
sodium_version_OBJECTS = sodium_version.$(OBJEXT)
sodium_version_DEPENDENCIES = $(TESTS_LDADD)
stream_SOURCES = stream.c
stream_OBJECTS = stream.$(OBJEXT)
stream_DEPENDENCIES = $(TESTS_LDADD)
stream2_SOURCES = stream2.c
stream2_OBJECTS = stream2.$(OBJEXT)
stream2_DEPENDENCIES = $(TESTS_LDADD)
stream3_SOURCES = stream3.c
stream3_OBJECTS = stream3.$(OBJEXT)
stream3_DEPENDENCIES = $(TESTS_LDADD)
stream4_SOURCES = stream4.c
stream4_OBJECTS = stream4.$(OBJEXT)
stream4_DEPENDENCIES = $(TESTS_LDADD)
verify1_SOURCES = verify1.c
verify1_OBJECTS = verify1.$(OBJEXT)
verify1_DEPENDENCIES = $(TESTS_LDADD)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = aead_aes256gcm.c aead_chacha20poly1305.c auth.c auth2.c \
	auth3.c auth5.c auth6.c auth7.c box.c box2.c box7.c box8.c \
	box_easy.c box_easy2.c box_seal.c box_seed.c chacha20.c \
	core1.c core2.c core3.c core4.c core5.c core6.c \
	ed25519_convert.c generichash.c generichash2.c generichash3.c \
	hash.c hash3.c onetimeauth.c onetimeauth2.c onetimeauth7.c \
	pwhash.c pwhash_scrypt_ll.c randombytes.c scalarmult.c \
	scalarmult2.c scalarmult5.c scalarmult6.c scalarmult7.c \
	secretbox.c secretbox2.c secretbox7.c secretbox8.c \
	secretbox_easy.c secretbox_easy2.c shorthash.c sign.c \
	sodium_core.c sodium_utils.c sodium_utils2.c sodium_utils3.c \
	sodium_version.c stream.c stream2.c stream3.c stream4.c \
	verify1.c
DIST_SOURCES = aead_aes256gcm.c aead_chacha20poly1305.c auth.c auth2.c \
	auth3.c auth5.c auth6.c auth7.c box.c box2.c box7.c box8.c \
	box_easy.c box_easy2.c box_seal.c box_seed.c chacha20.c \
	core1.c core2.c core3.c core4.c core5.c core6.c \
	ed25519_convert.c generichash.c generichash2.c generichash3.c \
	hash.c hash3.c onetimeauth.c onetimeauth2.c onetimeauth7.c \
	pwhash.c pwhash_scrypt_ll.c randombytes.c scalarmult.c \
	scalarmult2.c scalarmult5.c scalarmult6.c scalarmult7.c \
	secretbox.c secretbox2.c secretbox7.c secretbox8.c \
	secretbox_easy.c secretbox_easy2.c shorthash.c sign.c \
	sodium_core.c sodium_utils.c sodium_utils2.c sodium_utils3.c \
	sodium_version.c stream.c stream2.c stream3.c stream4.c \
	verify1.c
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/wangdewei/MsgQueue/soft/libsodium-1.0.8/build-aux/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/wangdewei/MsgQueue/soft/libsodium-1.0.8/build-aux/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/wangdewei/MsgQueue/soft/libsodium-1.0.8/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/wangdewei/MsgQueue/soft/libsodium-1.0.8/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/wangdewei/MsgQueue/soft/libsodium-1.0.8/build-aux/missing --run automake-1.11
AWK = gawk
CC = gcc -std=gnu99
CCAS = gcc -std=gnu99
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Winit-self -Wwrite-strings -Wdiv-by-zero
CFLAGS_AESNI = -maes
CFLAGS_MMX = -mmmx
CFLAGS_PCLMUL = -mpclmul
CFLAGS_SSE2 = -msse2
CFLAGS_SSE3 = -msse3
CFLAGS_SSE41 = -msse4.1
CFLAGS_SSSE3 = -mssse3
CPP = gcc -std=gnu99 -E
CPPFLAGS =  -D_FORTIFY_SOURCE=2
CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Wcomment -Wfloat-equal -Wformat=2 -Wimplicit -Wmissing-declarations -Wmissing-prototypes -Wnormalized=id -Woverride-init -Wparentheses -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"libsodium\" -DPACKAGE_TARNAME=\"libsodium\" -DPACKAGE_VERSION=\"1.0.8\" -DPACKAGE_STRING=\"libsodium\ 1.0.8\" -DPACKAGE_BUGREPORT=\"https://github.com/jedisct1/libsodium/issues\" -DPACKAGE_URL=\"https://github.com/jedisct1/libsodium\" -DPACKAGE=\"libsodium\" -DVERSION=\"1.0.8\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1
DEPDIR = .deps
DLLTOOL = dlltool
DLL_VERSION = 8
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_AMD64_ASM_V = 1
HAVE_AVX_ASM_V = 1
HAVE_CPUID_V = 1
HAVE_TI_MODE_V = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISODATE = 2016-03-02
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = build-aux/ltmain.sh
LIBTOOL_EXTRA_FLAGS =  -version-info 18:1:0
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/wangdewei/MsgQueue/soft/libsodium-1.0.8/build-aux/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libsodium
PACKAGE_BUGREPORT = https://github.com/jedisct1/libsodium/issues
PACKAGE_NAME = libsodium
PACKAGE_STRING = libsodium 1.0.8
PACKAGE_TARNAME = libsodium
PACKAGE_URL = https://github.com/jedisct1/libsodium
PACKAGE_VERSION = 1.0.8
PATH_SEPARATOR = :
RANLIB = ranlib
SAFECODE_HOME = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SODIUM_LIBRARY_VERSION = 18:1:0
SODIUM_LIBRARY_VERSION_MAJOR = 9
SODIUM_LIBRARY_VERSION_MINOR = 1
STRIP = strip
TEST_LDFLAGS = 
VERSION = 1.0.8
abs_builddir = /home/wangdewei/MsgQueue/soft/libsodium-1.0.8/test/default
abs_srcdir = /home/wangdewei/MsgQueue/soft/libsodium-1.0.8/test/default
abs_top_builddir = /home/wangdewei/MsgQueue/soft/libsodium-1.0.8
abs_top_srcdir = /home/wangdewei/MsgQueue/soft/libsodium-1.0.8
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/wangdewei/MsgQueue/soft/libsodium-1.0.8/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
EXTRA_DIST = \
	cmptest.h \
	wintest.bat \
	pre.js.inc \
	aead_aes256gcm.exp \
	aead_chacha20poly1305.exp \
	auth.exp \
	auth2.exp \
	auth3.exp \
	auth5.exp \
	auth6.exp \
	auth7.exp \
	box.exp \
	box2.exp \
	box7.exp \
	box8.exp \
	box_easy.exp \
	box_easy2.exp \
	box_seal.exp \
	box_seed.exp \
	chacha20.exp \
	core1.exp \
	core2.exp \
	core3.exp \
	core4.exp \
	core5.exp \
	core6.exp \
	ed25519_convert.exp \
	generichash.exp \
	generichash2.exp \
	generichash3.exp \
	hash.exp \
	hash2.exp \
	hash3.exp \
	onetimeauth.exp \
	onetimeauth2.exp \
	onetimeauth7.exp \
	pwhash.exp \
	pwhash_scrypt_ll.exp \
	randombytes.exp \
	scalarmult.exp \
	scalarmult2.exp \
	scalarmult5.exp \
	scalarmult6.exp \
	scalarmult7.exp \
	secretbox.exp \
	secretbox2.exp \
	secretbox7.exp \
	secretbox8.exp \
	secretbox_easy.exp \
	secretbox_easy2.exp \
	shorthash.exp \
	sign.exp \
	sodium_core.exp \
	sodium_utils.exp \
	sodium_utils2.exp \
	sodium_utils3.exp \
	sodium_version.exp \
	stream.exp \
	stream2.exp \
	stream3.exp \
	stream4.exp \
	verify1.exp

DISTCLEANFILES = \
	aead_aes256gcm.res \
	aead_chacha20poly1305.res \
	auth.res \
	auth2.res \
	auth3.res \
	auth5.res \
	auth6.res \
	auth7.res \
	box.res \
	box2.res \
	box7.res \
	box8.res \
	box_easy.res \
	box_easy2.res \
	box_seal.res \
	box_seed.res \
	chacha20.res \
	core1.res \
	core2.res \
	core3.res \
	core4.res \
	core5.res \
	core6.res \
	ed25519_convert.res \
	generichash.res \
	generichash2.res \
	generichash3.res \
	hash.res \
	hash2.res \
	hash3.res \
	onetimeauth.res \
	onetimeauth2.res \
	onetimeauth7.res \
	pwhash.res \
	pwhash_scrypt_ll.res \
	randombytes.res \
	scalarmult.res \
	scalarmult2.res \
	scalarmult5.res \
	scalarmult6.res \
	scalarmult7.res \
	secretbox.res \
	secretbox2.res \
	secretbox7.res \
	secretbox8.res \
	secretbox_easy.res \
	secretbox_easy2.res \
	shorthash.res \
	sign.res \
	sodium_core.res \
	sodium_utils.res \
	sodium_utils2.res \
	sodium_utils3.res \
	sodium_version.res \
	stream.res \
	stream2.res \
	stream3.res \
	stream4.res \
	verify1.res

#CLEANFILES = \
#	aead_aes256gcm.final \
#	aead_chacha20poly1305.final \
#	auth.final \
#	auth2.final \
#	auth3.final \
#	auth5.final \
#	auth6.final \
#	auth7.final \
#	box.final \
#	box2.final \
#	box7.final \
#	box8.final \
#	box_easy.final \
#	box_easy2.final \
#	box_seal.final \
#	box_seed.final \
#	chacha20.final \
#	core1.final \
#	core2.final \
#	core3.final \
#	core4.final \
#	core5.final \
#	core6.final \
#	ed25519_convert.final \
#	generichash.final \
#	generichash2.final \
#	generichash3.final \
#	hash.final \
#	hash2.final \
#	hash3.final \
#	onetimeauth.final \
#	onetimeauth2.final \
#	onetimeauth7.final \
#	pwhash.final \
#	pwhash_scrypt_ll.final \
#	randombytes.final \
#	scalarmult.final \
#	scalarmult2.final \
#	scalarmult5.final \
#	scalarmult6.final \
#	scalarmult7.final \
#	secretbox.final \
#	secretbox2.final \
#	secretbox7.final \
#	secretbox8.final \
#	secretbox_easy.final \
#	secretbox_easy2.final \
#	shorthash.final \
#	sign.final \
#	sodium_core.final \
#	sodium_utils.final \
#	sodium_version.final \
#	stream.final \
#	stream2.final \
#	stream3.final \
#	stream4.final \
#	verify1.final \
#	aead_aes256gcm.nexe \
#	aead_chacha20poly1305.nexe \
#	auth.nexe \
#	auth2.nexe \
#	auth3.nexe \
#	auth5.nexe \
#	auth6.nexe \
#	auth7.nexe \
#	box.nexe \
#	box2.nexe \
#	box7.nexe \
#	box8.nexe \
#	box_easy.nexe \
#	box_easy2.nexe \
#	box_seal.nexe \
#	box_seed.nexe \
#	chacha20.nexe \
#	core1.nexe \
#	core2.nexe \
#	core3.nexe \
#	core4.nexe \
#	core5.nexe \
#	core6.nexe \
#	ed25519_convert.nexe \
#	generichash.nexe \
#	generichash2.nexe \
#	generichash3.nexe \
#	hash.nexe \
#	hash2.nexe \
#	hash3.nexe \
#	onetimeauth.nexe \
#	onetimeauth2.nexe \
#	onetimeauth7.nexe \
#	pwhash.nexe \
#	pwhash_scrypt_ll.nexe \
#	randombytes.nexe \
#	scalarmult.nexe \
#	scalarmult2.nexe \
#	scalarmult5.nexe \
#	scalarmult6.nexe \
#	scalarmult7.nexe \
#	secretbox.nexe \
#	secretbox2.nexe \
#	secretbox7.nexe \
#	secretbox8.nexe \
#	secretbox_easy.nexe \
#	secretbox_easy2.nexe \
#	shorthash.nexe \
#	sign.nexe \
#	sodium_core.nexe \
#	sodium_utils.nexe \
#	sodium_version.nexe \
#	stream.nexe \
#	stream2.nexe \
#	stream3.nexe \
#	stream4.nexe \
#	verify1.nexe

AM_CPPFLAGS = \
	-DTEST_SRCDIR=\".\" \
	-I$(top_srcdir)/src/libsodium/include \
	-I$(top_srcdir)/src/libsodium/include/sodium \
	-I$(top_builddir)/src/libsodium/include \
	-I$(top_builddir)/src/libsodium/include/sodium \
	-I$(top_srcdir)/test/quirks

AM_LDFLAGS = 
TESTS_TARGETS = aead_aes256gcm aead_chacha20poly1305 auth auth2 auth3 \
	auth5 auth6 auth7 box box2 box7 box8 box_easy box_easy2 \
	box_seal box_seed chacha20 core1 core2 core3 core4 core5 core6 \
	ed25519_convert generichash generichash2 generichash3 hash \
	hash3 onetimeauth onetimeauth2 onetimeauth7 pwhash \
	pwhash_scrypt_ll randombytes scalarmult scalarmult2 \
	scalarmult5 scalarmult6 scalarmult7 secretbox secretbox2 \
	secretbox7 secretbox8 secretbox_easy secretbox_easy2 shorthash \
	sign sodium_core sodium_utils sodium_version stream stream2 \
	stream3 stream4 verify1 $(am__append_1)
TESTS_LDADD = \
	${top_builddir}/src/libsodium/libsodium.la

aead_aes256gcm_SOURCE = cmptest.h aead_aes256gcm.c
aead_aes256gcm_LDADD = $(TESTS_LDADD)
aead_chacha20poly1305_SOURCE = cmptest.h aead_chacha20poly1305.c
aead_chacha20poly1305_LDADD = $(TESTS_LDADD)
auth_SOURCE = cmptest.h auth.c
auth_LDADD = $(TESTS_LDADD)
auth2_SOURCE = cmptest.h auth2.c
auth2_LDADD = $(TESTS_LDADD)
auth3_SOURCE = cmptest.h auth3.c
auth3_LDADD = $(TESTS_LDADD)
auth5_SOURCE = cmptest.h auth5.c quirks.h
auth5_LDADD = $(TESTS_LDADD)
auth6_SOURCE = cmptest.h auth6.c quirks.h
auth6_LDADD = $(TESTS_LDADD)
auth7_SOURCE = cmptest.h auth7.c quirks.h
auth7_LDADD = $(TESTS_LDADD)
box_SOURCE = cmptest.h box.c
box_LDADD = $(TESTS_LDADD)
box2_SOURCE = cmptest.h box2.c
box2_LDADD = $(TESTS_LDADD)
box7_SOURCE = cmptest.h box7.c
box7_LDADD = $(TESTS_LDADD)
box8_SOURCE = cmptest.h box8.c
box8_LDADD = $(TESTS_LDADD)
box_easy_SOURCE = cmptest.h box_easy.c
box_easy_LDADD = $(TESTS_LDADD)
box_easy2_SOURCE = cmptest.h box_easy2.c
box_easy2_LDADD = $(TESTS_LDADD)
box_seal_SOURCE = cmptest.h box_seal.c
box_seal_LDADD = $(TESTS_LDADD)
box_seed_SOURCE = cmptest.h box_seed.c
box_seed_LDADD = $(TESTS_LDADD)
chacha20_SOURCE = cmptest.h chacha20.c
chacha20_LDADD = $(TESTS_LDADD)
core1_SOURCE = cmptest.h core1.c
core1_LDADD = $(TESTS_LDADD)
core2_SOURCE = cmptest.h core2.c
core2_LDADD = $(TESTS_LDADD)
core3_SOURCE = cmptest.h core3.c
core3_LDADD = $(TESTS_LDADD)
core4_SOURCE = cmptest.h core4.c
core4_LDADD = $(TESTS_LDADD)
core5_SOURCE = cmptest.h core5.c
core5_LDADD = $(TESTS_LDADD)
core6_SOURCE = cmptest.h core6.c
core6_LDADD = $(TESTS_LDADD)
ed25519_convert_SOURCE = cmptest.h ed25519_convert.c
ed25519_convert_LDADD = $(TESTS_LDADD)
generichash_SOURCE = cmptest.h generichash.c
generichash_LDADD = $(TESTS_LDADD)
generichash2_SOURCE = cmptest.h generichash2.c
generichash2_LDADD = $(TESTS_LDADD)
generichash3_SOURCE = cmptest.h generichash3.c
generichash3_LDADD = $(TESTS_LDADD)
hash_SOURCE = cmptest.h hash.c
hash_LDADD = $(TESTS_LDADD)
hash3_SOURCE = cmptest.h hash3.c
hash3_LDADD = $(TESTS_LDADD)
onetimeauth_SOURCE = cmptest.h onetimeauth.c
onetimeauth_LDADD = $(TESTS_LDADD)
onetimeauth2_SOURCE = cmptest.h onetimeauth2.c
onetimeauth2_LDADD = $(TESTS_LDADD)
onetimeauth7_SOURCE = cmptest.h onetimeauth7.c
onetimeauth7_LDADD = $(TESTS_LDADD)
pwhash_SOURCE = cmptest.h pwhash.c
pwhash_LDADD = $(TESTS_LDADD)
pwhash_scrypt_ll_SOURCE = cmptest.h pwhash_scrypt_ll.c
pwhash_scrypt_ll_LDADD = $(TESTS_LDADD)
randombytes_SOURCE = cmptest.h randombytes.c
randombytes_LDADD = $(TESTS_LDADD)
scalarmult_SOURCE = cmptest.h scalarmult.c
scalarmult_LDADD = $(TESTS_LDADD)
scalarmult2_SOURCE = cmptest.h scalarmult2.c
scalarmult2_LDADD = $(TESTS_LDADD)
scalarmult5_SOURCE = cmptest.h scalarmult5.c
scalarmult5_LDADD = $(TESTS_LDADD)
scalarmult6_SOURCE = cmptest.h scalarmult6.c
scalarmult6_LDADD = $(TESTS_LDADD)
scalarmult7_SOURCE = cmptest.h scalarmult7.c
scalarmult7_LDADD = $(TESTS_LDADD)
secretbox_SOURCE = cmptest.h secretbox.c
secretbox_LDADD = $(TESTS_LDADD)
secretbox2_SOURCE = cmptest.h secretbox2.c
secretbox2_LDADD = $(TESTS_LDADD)
secretbox7_SOURCE = cmptest.h secretbox7.c
secretbox7_LDADD = $(TESTS_LDADD)
secretbox8_SOURCE = cmptest.h secretbox8.c
secretbox8_LDADD = $(TESTS_LDADD)
secretbox_easy_SOURCE = cmptest.h secretbox_easy.c
secretbox_easy_LDADD = $(TESTS_LDADD)
secretbox_easy2_SOURCE = cmptest.h secretbox_easy2.c
secretbox_easy2_LDADD = $(TESTS_LDADD)
shorthash_SOURCE = cmptest.h shorthash.c
shorthash_LDADD = $(TESTS_LDADD)
sign_SOURCE = cmptest.h sign.c
sign_LDADD = $(TESTS_LDADD)
sodium_core_SOURCE = cmptest.h sodium_core.c
sodium_core_LDADD = $(TESTS_LDADD)
sodium_utils_SOURCE = cmptest.h sodium_utils.c
sodium_utils_LDADD = $(TESTS_LDADD)
sodium_utils2_SOURCE = cmptest.h sodium_utils2.c
sodium_utils2_LDADD = $(TESTS_LDADD)
sodium_utils3_SOURCE = cmptest.h sodium_utils3.c
sodium_utils3_LDADD = $(TESTS_LDADD)
sodium_version_SOURCE = cmptest.h sodium_version.c
sodium_version_LDADD = $(TESTS_LDADD)
stream_SOURCE = cmptest.h stream.c
stream_LDADD = $(TESTS_LDADD)
stream2_SOURCE = cmptest.h stream2.c
stream2_LDADD = $(TESTS_LDADD)
stream3_SOURCE = cmptest.h stream3.c
stream3_LDADD = $(TESTS_LDADD)
stream4_SOURCE = cmptest.h stream4.c
stream4_LDADD = $(TESTS_LDADD)
verify1_SOURCE = cmptest.h verify1.c
verify1_LDADD = $(TESTS_LDADD)
#LOG_COMPILER = ./nacl-test-wrapper.sh
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/default/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/default/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
aead_aes256gcm$(EXEEXT): $(aead_aes256gcm_OBJECTS) $(aead_aes256gcm_DEPENDENCIES) 
	@rm -f aead_aes256gcm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aead_aes256gcm_OBJECTS) $(aead_aes256gcm_LDADD) $(LIBS)
aead_chacha20poly1305$(EXEEXT): $(aead_chacha20poly1305_OBJECTS) $(aead_chacha20poly1305_DEPENDENCIES) 
	@rm -f aead_chacha20poly1305$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aead_chacha20poly1305_OBJECTS) $(aead_chacha20poly1305_LDADD) $(LIBS)
auth$(EXEEXT): $(auth_OBJECTS) $(auth_DEPENDENCIES) 
	@rm -f auth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth_OBJECTS) $(auth_LDADD) $(LIBS)
auth2$(EXEEXT): $(auth2_OBJECTS) $(auth2_DEPENDENCIES) 
	@rm -f auth2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth2_OBJECTS) $(auth2_LDADD) $(LIBS)
auth3$(EXEEXT): $(auth3_OBJECTS) $(auth3_DEPENDENCIES) 
	@rm -f auth3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth3_OBJECTS) $(auth3_LDADD) $(LIBS)
auth5$(EXEEXT): $(auth5_OBJECTS) $(auth5_DEPENDENCIES) 
	@rm -f auth5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth5_OBJECTS) $(auth5_LDADD) $(LIBS)
auth6$(EXEEXT): $(auth6_OBJECTS) $(auth6_DEPENDENCIES) 
	@rm -f auth6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth6_OBJECTS) $(auth6_LDADD) $(LIBS)
auth7$(EXEEXT): $(auth7_OBJECTS) $(auth7_DEPENDENCIES) 
	@rm -f auth7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth7_OBJECTS) $(auth7_LDADD) $(LIBS)
box$(EXEEXT): $(box_OBJECTS) $(box_DEPENDENCIES) 
	@rm -f box$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_OBJECTS) $(box_LDADD) $(LIBS)
box2$(EXEEXT): $(box2_OBJECTS) $(box2_DEPENDENCIES) 
	@rm -f box2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box2_OBJECTS) $(box2_LDADD) $(LIBS)
box7$(EXEEXT): $(box7_OBJECTS) $(box7_DEPENDENCIES) 
	@rm -f box7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box7_OBJECTS) $(box7_LDADD) $(LIBS)
box8$(EXEEXT): $(box8_OBJECTS) $(box8_DEPENDENCIES) 
	@rm -f box8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box8_OBJECTS) $(box8_LDADD) $(LIBS)
box_easy$(EXEEXT): $(box_easy_OBJECTS) $(box_easy_DEPENDENCIES) 
	@rm -f box_easy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_easy_OBJECTS) $(box_easy_LDADD) $(LIBS)
box_easy2$(EXEEXT): $(box_easy2_OBJECTS) $(box_easy2_DEPENDENCIES) 
	@rm -f box_easy2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_easy2_OBJECTS) $(box_easy2_LDADD) $(LIBS)
box_seal$(EXEEXT): $(box_seal_OBJECTS) $(box_seal_DEPENDENCIES) 
	@rm -f box_seal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_seal_OBJECTS) $(box_seal_LDADD) $(LIBS)
box_seed$(EXEEXT): $(box_seed_OBJECTS) $(box_seed_DEPENDENCIES) 
	@rm -f box_seed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_seed_OBJECTS) $(box_seed_LDADD) $(LIBS)
chacha20$(EXEEXT): $(chacha20_OBJECTS) $(chacha20_DEPENDENCIES) 
	@rm -f chacha20$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(chacha20_OBJECTS) $(chacha20_LDADD) $(LIBS)
core1$(EXEEXT): $(core1_OBJECTS) $(core1_DEPENDENCIES) 
	@rm -f core1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core1_OBJECTS) $(core1_LDADD) $(LIBS)
core2$(EXEEXT): $(core2_OBJECTS) $(core2_DEPENDENCIES) 
	@rm -f core2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core2_OBJECTS) $(core2_LDADD) $(LIBS)
core3$(EXEEXT): $(core3_OBJECTS) $(core3_DEPENDENCIES) 
	@rm -f core3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core3_OBJECTS) $(core3_LDADD) $(LIBS)
core4$(EXEEXT): $(core4_OBJECTS) $(core4_DEPENDENCIES) 
	@rm -f core4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core4_OBJECTS) $(core4_LDADD) $(LIBS)
core5$(EXEEXT): $(core5_OBJECTS) $(core5_DEPENDENCIES) 
	@rm -f core5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core5_OBJECTS) $(core5_LDADD) $(LIBS)
core6$(EXEEXT): $(core6_OBJECTS) $(core6_DEPENDENCIES) 
	@rm -f core6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core6_OBJECTS) $(core6_LDADD) $(LIBS)
ed25519_convert$(EXEEXT): $(ed25519_convert_OBJECTS) $(ed25519_convert_DEPENDENCIES) 
	@rm -f ed25519_convert$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ed25519_convert_OBJECTS) $(ed25519_convert_LDADD) $(LIBS)
generichash$(EXEEXT): $(generichash_OBJECTS) $(generichash_DEPENDENCIES) 
	@rm -f generichash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generichash_OBJECTS) $(generichash_LDADD) $(LIBS)
generichash2$(EXEEXT): $(generichash2_OBJECTS) $(generichash2_DEPENDENCIES) 
	@rm -f generichash2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generichash2_OBJECTS) $(generichash2_LDADD) $(LIBS)
generichash3$(EXEEXT): $(generichash3_OBJECTS) $(generichash3_DEPENDENCIES) 
	@rm -f generichash3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generichash3_OBJECTS) $(generichash3_LDADD) $(LIBS)
hash$(EXEEXT): $(hash_OBJECTS) $(hash_DEPENDENCIES) 
	@rm -f hash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hash_OBJECTS) $(hash_LDADD) $(LIBS)
hash3$(EXEEXT): $(hash3_OBJECTS) $(hash3_DEPENDENCIES) 
	@rm -f hash3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hash3_OBJECTS) $(hash3_LDADD) $(LIBS)
onetimeauth$(EXEEXT): $(onetimeauth_OBJECTS) $(onetimeauth_DEPENDENCIES) 
	@rm -f onetimeauth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(onetimeauth_OBJECTS) $(onetimeauth_LDADD) $(LIBS)
onetimeauth2$(EXEEXT): $(onetimeauth2_OBJECTS) $(onetimeauth2_DEPENDENCIES) 
	@rm -f onetimeauth2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(onetimeauth2_OBJECTS) $(onetimeauth2_LDADD) $(LIBS)
onetimeauth7$(EXEEXT): $(onetimeauth7_OBJECTS) $(onetimeauth7_DEPENDENCIES) 
	@rm -f onetimeauth7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(onetimeauth7_OBJECTS) $(onetimeauth7_LDADD) $(LIBS)
pwhash$(EXEEXT): $(pwhash_OBJECTS) $(pwhash_DEPENDENCIES) 
	@rm -f pwhash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pwhash_OBJECTS) $(pwhash_LDADD) $(LIBS)
pwhash_scrypt_ll$(EXEEXT): $(pwhash_scrypt_ll_OBJECTS) $(pwhash_scrypt_ll_DEPENDENCIES) 
	@rm -f pwhash_scrypt_ll$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pwhash_scrypt_ll_OBJECTS) $(pwhash_scrypt_ll_LDADD) $(LIBS)
randombytes$(EXEEXT): $(randombytes_OBJECTS) $(randombytes_DEPENDENCIES) 
	@rm -f randombytes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(randombytes_OBJECTS) $(randombytes_LDADD) $(LIBS)
scalarmult$(EXEEXT): $(scalarmult_OBJECTS) $(scalarmult_DEPENDENCIES) 
	@rm -f scalarmult$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult_OBJECTS) $(scalarmult_LDADD) $(LIBS)
scalarmult2$(EXEEXT): $(scalarmult2_OBJECTS) $(scalarmult2_DEPENDENCIES) 
	@rm -f scalarmult2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult2_OBJECTS) $(scalarmult2_LDADD) $(LIBS)
scalarmult5$(EXEEXT): $(scalarmult5_OBJECTS) $(scalarmult5_DEPENDENCIES) 
	@rm -f scalarmult5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult5_OBJECTS) $(scalarmult5_LDADD) $(LIBS)
scalarmult6$(EXEEXT): $(scalarmult6_OBJECTS) $(scalarmult6_DEPENDENCIES) 
	@rm -f scalarmult6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult6_OBJECTS) $(scalarmult6_LDADD) $(LIBS)
scalarmult7$(EXEEXT): $(scalarmult7_OBJECTS) $(scalarmult7_DEPENDENCIES) 
	@rm -f scalarmult7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult7_OBJECTS) $(scalarmult7_LDADD) $(LIBS)
secretbox$(EXEEXT): $(secretbox_OBJECTS) $(secretbox_DEPENDENCIES) 
	@rm -f secretbox$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox_OBJECTS) $(secretbox_LDADD) $(LIBS)
secretbox2$(EXEEXT): $(secretbox2_OBJECTS) $(secretbox2_DEPENDENCIES) 
	@rm -f secretbox2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox2_OBJECTS) $(secretbox2_LDADD) $(LIBS)
secretbox7$(EXEEXT): $(secretbox7_OBJECTS) $(secretbox7_DEPENDENCIES) 
	@rm -f secretbox7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox7_OBJECTS) $(secretbox7_LDADD) $(LIBS)
secretbox8$(EXEEXT): $(secretbox8_OBJECTS) $(secretbox8_DEPENDENCIES) 
	@rm -f secretbox8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox8_OBJECTS) $(secretbox8_LDADD) $(LIBS)
secretbox_easy$(EXEEXT): $(secretbox_easy_OBJECTS) $(secretbox_easy_DEPENDENCIES) 
	@rm -f secretbox_easy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox_easy_OBJECTS) $(secretbox_easy_LDADD) $(LIBS)
secretbox_easy2$(EXEEXT): $(secretbox_easy2_OBJECTS) $(secretbox_easy2_DEPENDENCIES) 
	@rm -f secretbox_easy2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox_easy2_OBJECTS) $(secretbox_easy2_LDADD) $(LIBS)
shorthash$(EXEEXT): $(shorthash_OBJECTS) $(shorthash_DEPENDENCIES) 
	@rm -f shorthash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shorthash_OBJECTS) $(shorthash_LDADD) $(LIBS)
sign$(EXEEXT): $(sign_OBJECTS) $(sign_DEPENDENCIES) 
	@rm -f sign$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sign_OBJECTS) $(sign_LDADD) $(LIBS)
sodium_core$(EXEEXT): $(sodium_core_OBJECTS) $(sodium_core_DEPENDENCIES) 
	@rm -f sodium_core$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_core_OBJECTS) $(sodium_core_LDADD) $(LIBS)
sodium_utils$(EXEEXT): $(sodium_utils_OBJECTS) $(sodium_utils_DEPENDENCIES) 
	@rm -f sodium_utils$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_utils_OBJECTS) $(sodium_utils_LDADD) $(LIBS)
sodium_utils2$(EXEEXT): $(sodium_utils2_OBJECTS) $(sodium_utils2_DEPENDENCIES) 
	@rm -f sodium_utils2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_utils2_OBJECTS) $(sodium_utils2_LDADD) $(LIBS)
sodium_utils3$(EXEEXT): $(sodium_utils3_OBJECTS) $(sodium_utils3_DEPENDENCIES) 
	@rm -f sodium_utils3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_utils3_OBJECTS) $(sodium_utils3_LDADD) $(LIBS)
sodium_version$(EXEEXT): $(sodium_version_OBJECTS) $(sodium_version_DEPENDENCIES) 
	@rm -f sodium_version$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_version_OBJECTS) $(sodium_version_LDADD) $(LIBS)
stream$(EXEEXT): $(stream_OBJECTS) $(stream_DEPENDENCIES) 
	@rm -f stream$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream_OBJECTS) $(stream_LDADD) $(LIBS)
stream2$(EXEEXT): $(stream2_OBJECTS) $(stream2_DEPENDENCIES) 
	@rm -f stream2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream2_OBJECTS) $(stream2_LDADD) $(LIBS)
stream3$(EXEEXT): $(stream3_OBJECTS) $(stream3_DEPENDENCIES) 
	@rm -f stream3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream3_OBJECTS) $(stream3_LDADD) $(LIBS)
stream4$(EXEEXT): $(stream4_OBJECTS) $(stream4_DEPENDENCIES) 
	@rm -f stream4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream4_OBJECTS) $(stream4_LDADD) $(LIBS)
verify1$(EXEEXT): $(verify1_OBJECTS) $(verify1_DEPENDENCIES) 
	@rm -f verify1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(verify1_OBJECTS) $(verify1_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/aead_aes256gcm.Po
include ./$(DEPDIR)/aead_chacha20poly1305.Po
include ./$(DEPDIR)/auth.Po
include ./$(DEPDIR)/auth2.Po
include ./$(DEPDIR)/auth3.Po
include ./$(DEPDIR)/auth5.Po
include ./$(DEPDIR)/auth6.Po
include ./$(DEPDIR)/auth7.Po
include ./$(DEPDIR)/box.Po
include ./$(DEPDIR)/box2.Po
include ./$(DEPDIR)/box7.Po
include ./$(DEPDIR)/box8.Po
include ./$(DEPDIR)/box_easy.Po
include ./$(DEPDIR)/box_easy2.Po
include ./$(DEPDIR)/box_seal.Po
include ./$(DEPDIR)/box_seed.Po
include ./$(DEPDIR)/chacha20.Po
include ./$(DEPDIR)/core1.Po
include ./$(DEPDIR)/core2.Po
include ./$(DEPDIR)/core3.Po
include ./$(DEPDIR)/core4.Po
include ./$(DEPDIR)/core5.Po
include ./$(DEPDIR)/core6.Po
include ./$(DEPDIR)/ed25519_convert.Po
include ./$(DEPDIR)/generichash.Po
include ./$(DEPDIR)/generichash2.Po
include ./$(DEPDIR)/generichash3.Po
include ./$(DEPDIR)/hash.Po
include ./$(DEPDIR)/hash3.Po
include ./$(DEPDIR)/onetimeauth.Po
include ./$(DEPDIR)/onetimeauth2.Po
include ./$(DEPDIR)/onetimeauth7.Po
include ./$(DEPDIR)/pwhash.Po
include ./$(DEPDIR)/pwhash_scrypt_ll.Po
include ./$(DEPDIR)/randombytes.Po
include ./$(DEPDIR)/scalarmult.Po
include ./$(DEPDIR)/scalarmult2.Po
include ./$(DEPDIR)/scalarmult5.Po
include ./$(DEPDIR)/scalarmult6.Po
include ./$(DEPDIR)/scalarmult7.Po
include ./$(DEPDIR)/secretbox.Po
include ./$(DEPDIR)/secretbox2.Po
include ./$(DEPDIR)/secretbox7.Po
include ./$(DEPDIR)/secretbox8.Po
include ./$(DEPDIR)/secretbox_easy.Po
include ./$(DEPDIR)/secretbox_easy2.Po
include ./$(DEPDIR)/shorthash.Po
include ./$(DEPDIR)/sign.Po
include ./$(DEPDIR)/sodium_core.Po
include ./$(DEPDIR)/sodium_utils.Po
include ./$(DEPDIR)/sodium_utils2.Po
include ./$(DEPDIR)/sodium_utils3.Po
include ./$(DEPDIR)/sodium_version.Po
include ./$(DEPDIR)/stream.Po
include ./$(DEPDIR)/stream2.Po
include ./$(DEPDIR)/stream3.Po
include ./$(DEPDIR)/stream4.Po
include ./$(DEPDIR)/verify1.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


verify: check

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
